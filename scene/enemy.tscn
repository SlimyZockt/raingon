[gd_scene load_steps=10 format=2]

[ext_resource path="res://assets/box.png" type="Texture" id=1]
[ext_resource path="res://assets/sound/hit.wav" type="AudioStream" id=2]
[ext_resource path="res://scene/Explosion.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

onready var attakRange = $attakRange/CollisionShape2D

export (int) var detect_radius = 360
export (bool) var debug = false
export(int) var hp = 3

var explosion = preload(\"res://scene/Explosion.tscn\")

var follw = false
var target
var hit_pos
var player_pos
var motition = Vector2(0, 0)
var vis_color = Color(0, 1, 0, 0.4)
var laser_color = Color(0.9, 0, 0, 0.4)
var detects: bool = false
var speed = 0

const DETECT_RADIUS = 360
const MAX_SPEED = 5.0
const ASSELERATION = 1

func _on_Area2D_body_entered(body):
	if body.is_in_group(\"bullet\"):
		hp -= 1
		var ex = explosion.instance()
		ex.position = global_position
		ex.ex()
		get_tree().get_root().add_child(ex)
		$AnimationPlayer.play(\"Hit\")
		if hp == 0:
			queue_free()
	elif body.is_in_group(\"player\"):
		body.die()

func _ready():
	attakRange.shape.radius = detect_radius
		
func _physics_process(delta):
	update()
	if target:
		see()
	
	move_and_slide(motition)

func _draw():
	if debug:
	 	# display the visibility area
		draw_circle(Vector2(), detect_radius, vis_color)
		if target:
			for hit in hit_pos:
				draw_circle((hit- global_position).rotated(-rotation), 5, laser_color)
				draw_line(Vector2(), (hit - global_position).rotated(-rotation), laser_color)

func _on_attakRange_body_entered(body):
	 # connect this to the \"body_entered\" signal
	if body.name == \"player\":
		if target:
			return
		target = body



func _on_attakRange_body_exited(body):
	if body == target:
		target = null
	
func see():
	hit_pos = []
	var space_state = get_world_2d().direct_space_state
	var target_extents = target.get_node(\"CollisionShape2D\").shape.extents - Vector2(5, 5)
	var nw = target.global_position - target_extents
	var se = target.global_position + target_extents
	var ne = target.global_position + Vector2(target_extents.x, -target_extents.y)
	var sw = target.global_position + Vector2(-target_extents.x, target_extents.y)
	for pos in [target.position ,nw, se, ne, sw]:
		var result = space_state.intersect_ray(global_position, pos, [self], collision_mask)
		if result:
			hit_pos.append(result.position)
			if result.collider.name == \"player\":
				rotation = (target.global_position - global_position).angle()
				detects = true
				follw(pos)

func follw(player_pos):
		if speed >= 5:
			motition = (global_position - player_pos) * -speed
		else:
			speed += 0.02
			motition = (global_position - player_pos) * -speed"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 32, 32 )

[sub_resource type="CircleShape2D" id=3]

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 33, 33 )

[sub_resource type="Curve2D" id=5]
_data = {
"points": PoolVector2Array(  )
}

[sub_resource type="Animation" id=6]
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("box:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 0.999997, 1 ),
"update": 0,
"values": [ Color( 1, 0, 0, 1 ), Color( 0.301961, 0.0196078, 0.0196078, 1 ), Color( 1, 0, 0, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AudioStreamPlayer:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.1, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[node name="enemy" type="KinematicBody2D" groups=[
"hitbox",
]]
script = SubResource( 1 )
detect_radius = 700
hp = 8

[node name="Collisionbox" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="box" type="Sprite" parent="."]
modulate = Color( 1, 0.0196078, 0.0196078, 1 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )

[node name="attakRange" type="Area2D" parent="."]
editor/display_folded = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="attakRange"]
shape = SubResource( 3 )

[node name="hitbox" type="Area2D" parent="."]
editor/display_folded = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="hitbox"]
visible = false
shape = SubResource( 4 )

[node name="Path2D" type="Path2D" parent="."]
curve = SubResource( 5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Hit = SubResource( 6 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[node name="Explosion" parent="." instance=ExtResource( 3 )]
[connection signal="body_entered" from="attakRange" to="." method="_on_attakRange_body_entered"]
[connection signal="body_exited" from="attakRange" to="." method="_on_attakRange_body_exited"]
[connection signal="body_entered" from="hitbox" to="." method="_on_Area2D_body_entered"]
