[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/sound/shot.wav" type="AudioStream" id=1]
[ext_resource path="res://assets/player.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

class_name Player

onready var bullet_scene = preload(\"res://scene/bullet.tscn\")

export(float) var FIRE_RATE = 0.5
export(int) var BULLET_AMUONT = 5
export(int) var BULLET_SPEED = 1200
export(int) var BULLET_RAIL = 1

var motion: Vector2 = Vector2()
var SavedPos: Vector2
var can_fire = true
var isJoyConnected

const dead_zone = 0.01
const MAX_SPEED = 600 * 1.5
const ACCELERATION = 2000 * 1.4

func _process(delta):
	check_input()
	if isJoyConnected:
		use_joy()
	else:
		shot_mouse()

func _physics_process(delta):
	
	var axis = get_input_axis()
	if axis == Vector2.ZERO:
		apply_friction(ACCELERATION * delta)
	else:
		apply_movement(axis * ACCELERATION * delta)
	motion = move_and_slide(motion)

func get_input_axis():
	var axis = Vector2.ZERO
	axis.x = int(Input.is_action_pressed(\"ui_right\")) - int(Input.is_action_pressed(\"ui_left\"))
	axis.y = int(Input.is_action_pressed(\"ui_down\")) - int(Input.is_action_pressed(\"ui_up\"))
	return axis.normalized()

func apply_friction(amount):
	if motion.length() > amount:
		motion -= motion.normalized() * amount
	else: 
		motion = Vector2.ZERO
	
func apply_movement(acceleration):
	motion += acceleration
	motion = motion.clamped(MAX_SPEED)
	
func shot_mouse():
	look_at(get_global_mouse_position())
	
	if Input.is_action_pressed(\"mouse\") and can_fire:
		shot()

func shot_controller():
	if can_fire:
		shot()

func shot():
	for bulletR in range(BULLET_RAIL):
		for bulletA in range(BULLET_AMUONT):
			var	bullet_instance = bullet_scene.instance()
			bullet_instance.position = $BulletPoint.get_global_position() + Vector2( bulletA * 100, 0)
			bullet_instance.rotation_degrees = rotation_degrees #+ rand_range(-FIRE_AMUONT,FIRE_AMUONT)
			bullet_instance.apply_impulse(Vector2(), Vector2(BULLET_SPEED, 0).rotated(rotation))
			get_tree().get_root().add_child(bullet_instance)
			$shot.play()
		can_fire = false
		yield(get_tree().create_timer(FIRE_RATE), \"timeout\")
		can_fire = true	
		
func use_joy():
	var staticDirction
	if Input.get_connected_joypads().size() > 0:
		var xAxis = Input.get_joy_axis(0, JOY_AXIS_2)
		var yAxis = Input.get_joy_axis(0, JOY_AXIS_3)
		var dirction = Vector2(xAxis, yAxis)
		if abs(xAxis) > dead_zone:
			staticDirction = dirction.angle()
			rotation = dirction.angle()
			shot_controller()

func check_input():
	if Input.get_connected_joypads().size() > 0:
		isJoyConnected = true
	else:
		isJoyConnected = false
		
func die():
	get_tree().get_root().get_node(\"GAme\").reload()
	queue_free()"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 4.46816, 27.1302 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 36, 36 )

[node name="KinematicBody2D" type="KinematicBody2D" groups=[
"player",
]]
position = Vector2( 2, 0 )
rotation = 1.5708
script = SubResource( 1 )
FIRE_RATE = 0.3

[node name="shot" type="AudioStreamPlayer2D" parent="."]
scale = Vector2( 0.9, 0.9 )
stream = ExtResource( 1 )

[node name="BulletPoint" type="Node2D" parent="."]
position = Vector2( 46.146, 3.05176e-005 )

[node name="player" type="Sprite" parent="."]
rotation = 1.5708
texture = ExtResource( 2 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
position = Vector2( 35.29, 0 )
scale = Vector2( 0.9, 0.9 )
shape = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2( 0.9, 0.9 )
shape = SubResource( 3 )
